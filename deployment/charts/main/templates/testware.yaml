
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    {{- include "application-engineering-testware.labels" . | nindent 4 }}
spec:
  volumes:
    - name: "{{ .Chart.Name }}-reports"
      emptyDir: {}
    - name: "{{ .Chart.Name }}-logs"
      emptyDir: {}
  containers:
    - name: "{{ $.Chart.Name }}-csars"
      image: {{ .Values.images.httpdCsarImage | quote }}
      imagePullPolicy: Always
      volumeMounts:
        - name: "{{ $.Chart.Name }}-reports"
          mountPath: "/reports"
        - name: "{{ .Chart.Name }}-logs"
          mountPath: "/var/log"
      securityContext:
        allowPrivilegeEscalation: true
        runAsNonRoot: false
        runAsUser: 0
    - name: "{{ $.Chart.Name }}"
      image: {{ $.Values.images.testwareImage | quote }}
      env:
        - name: "APP_VERSION"
          value: {{ $.Values.env.APP_VERSION }}
        - name: "BUILD_URL"
          value: {{ $.Values.env.BUILD_URL }}
        - name: "STAGING_TYPE"
          value: {{ $.Values.env.STAGING_TYPE }}
        - name: "PRODUCT"
          value: {{ $.Values.env.PRODUCT }}
        - name: "PRODUCT_VERSION"
          value: {{ $.Values.env.PRODUCT_VERSION }}
        - name: "ENVIRONMENT"
          value: {{ $.Values.env.ENVIRONMENT }}
        - name: "hostname_url"
          value: {{ $.Values.env.hostname_url}}
        - name: "keycloak_url"
          value: {{ $.Values.env.keycloak_url}}
        - name: "csar_path"
          value: {{ $.Values.env.csar_path }}
        - name: "OPTIONS_FILE"
          value: {{ $.Values.env.OPTIONS_FILE }}
        - name: "appmgr_user"
          value: {{ $.Values.env.appmgr_user }}
        - name: "appmgr_pass"
          value: {{ $.Values.env.appmgr_pass }}
        - name: "TEST_VERSION"
          value: {{ $.Values.env.TEST_VERSION }}
        - name: "TESTWARE_NAME"
          value: {{ $.Values.env.TESTWARE_NAME }}
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: testware-resources-secret
              key: database_url
        - name: K6_TOOL_GUI_URL
          valueFrom:
            secretKeyRef:
              name: testware-resources-secret
              key: gui_url
        - name: API_URL
          valueFrom:
            secretKeyRef:
              name: testware-resources-secret
              key: api_url
      volumeMounts:
        - name: "{{ $.Chart.Name }}-reports"
          mountPath: "/reports"
        - name: "{{ .Chart.Name }}-logs"
          mountPath: "/var/log"
      imagePullPolicy: Always
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
  dnsPolicy: ClusterFirst
  imagePullSecrets:
    - name: k8s-registry-secret
  schedulerName: default-scheduler
  restartPolicy: Never
  securityContext: {}
  terminationGracePeriodSeconds: 5
